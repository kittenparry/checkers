#!/usr/bin/env python3

import sys
import curses

# colours taken from https://godoc.org/github.com/whitedevops/colors
class COL:
	ResetAll = "\033[0m"

	Bold = "\033[1m"
	Dim = "\033[2m"
	Underlined = "\033[4m"
	Blink = "\033[5m"
	Reverse = "\033[7m"
	Hidden = "\033[8m"

	ResetBold = "\033[21m"
	ResetDim = "\033[22m"
	ResetUnderlined = "\033[24m"
	ResetBlink = "\033[25m"
	ResetReverse = "\033[27m"
	ResetHidden = "\033[28m"

	Default = "\033[39m"
	Black = "\033[30m"
	Red = "\033[31m"
	Green = "\033[32m"
	Yellow = "\033[33m"
	Blue = "\033[34m"
	Magenta = "\033[35m"
	Cyan = "\033[36m"
	LightGray = "\033[37m"
	DarkGray = "\033[90m"
	LightRed = "\033[91m"
	LightGreen = "\033[92m"
	LightYellow = "\033[93m"
	LightBlue = "\033[94m"
	LightMagenta = "\033[95m"
	LightCyan = "\033[96m"
	White = "\033[97m"

	BackgroundDefault = "\033[49m"
	BackgroundBlack = "\033[40m"
	BackgroundRed = "\033[41m"
	BackgroundGreen = "\033[42m"
	BackgroundYellow = "\033[43m"
	BackgroundBlue = "\033[44m"
	BackgroundMagenta = "\033[45m"
	BackgroundCyan = "\033[46m"
	BackgroundLightGray = "\033[47m"
	BackgroundDarkGray = "\033[100m"
	BackgroundLightRed = "\033[101m"
	BackgroundLightGreen = "\033[102m"
	BackgroundLightYellow = "\033[103m"
	BackgroundLightBlue = "\033[104m"
	BackgroundLightMagenta = "\033[105m"
	BackgroundLightCyan = "\033[106m"
	BackgroundWhite = "\033[107m"

def start():
	# FIXME: should probably reduce the game board to 4x8
	# and fill the rest of unplayable ground visually on runtime
	# or maybe replace 0s with -1s in unplayable squares

	# hand-made for now
	# 1s and 3s are player-1's discs and kings
	# 2s and 4s are player-2's discs and kings
	game_board = [
	[2, 0, 2, 0, 2, 0, 2, 0],
	[0, 2, 0, 2, 0, 2, 0, 2],
	[2, 0, 2, 0, 2, 0, 2, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 1, 0, 1, 0, 1, 0, 1],
	[1, 0, 1, 0, 1, 0, 1, 0],
	[0, 1, 0, 1, 0, 1, 0, 1],
	]

	# loop through it to draw the game board
	# different colours depending on player discs
	# dark bg for inactive squares for visibility
	# for y in range(8):
	# 	for i, x in enumerate(game_board[y]):
	# 		# to alternate colour orders between rows
	# 		if y % 2 == 0:
	# 			i += 1
	# 		if i % 2 == 0:
	# 			bg = COL.BackgroundLightGray
	# 			fg = COL.Yellow
	# 		else:
	# 			bg = COL.BackgroundDefault
	# 			if x == 2 or x == 4:
	# 				fg = COL.LightRed
	# 			elif x == 1 or x == 3:
	# 				fg = COL.LightMagenta
	# 		sys.stdout.write('%s%s%s%s' % (bg, fg, str(x), COL.ResetAll))
	# 	sys.stdout.write('\n')
	# sys.stdout.flush()

# source: https://stackoverflow.com/a/10694430/4085881
	stdscr = curses.initscr()
	curses.cbreak()
	stdscr.keypad(1)

	# starting and current player
	player = 1
	stdscr.addstr(0, 10, 'Hit \'q\' to quit')
	stdscr.addstr(2, 10, 'Turn: Player-%d' % player)
	stdscr.refresh()

	for y in range(8):
		for i, x in enumerate(game_board[y]):
			# if y % 2 == 0:
			# 	i += 1
			# if i % 2 == 0:
			# 	bg = COL.BackgroundLightGray
			# 	fg = COL.Yellow
			# else:
			# 	bg = COL.BackgroundDefault
			# 	if x == 2 or x == 4:
			# 		fg = COL.LightRed
			# 	elif x == 1 or x == 3:
			# 		fg = COL.LightMagenta
			# stdscr.addch(i, y, x)
			# val = '%s%s%s%s' % (bg, fg, str(x), COL.ResetAll)
			stdscr.addstr(i, y, str(x))

	pos_x = 0
	pos_y = 0
	key = ''
	while key != ord('q'):
		key = stdscr.getch()
		stdscr.addstr(3, 10, str(curses.getsyx()))
		stdscr.addstr(4, 10, ''.join(str(stdscr.instr(pos_x, pos_y, 1)).split('\'')).replace('b', ''))
		# stdscr.addch(20,25,key)
		stdscr.refresh()
		# if key == curses.KEY_UP: 
		# 	stdscr.addstr(2, 20, "Up")
		# elif key == curses.KEY_DOWN: 
		# 	stdscr.addstr(3, 20, "Down")
		if key == curses.KEY_UP:
			pos_x = pos_x - 1 if pos_x - 1 > 0 else 0
		if key == curses.KEY_DOWN:
			pos_x = pos_x + 1 if pos_x + 1 < 7 else 7
		if key == curses.KEY_LEFT:
			pos_y = pos_y - 1 if pos_y - 1 > 0 else 0
		if key == curses.KEY_RIGHT:
			pos_y = pos_y + 1 if pos_y + 1 < 7 else 7

		# diagonal movement modifiers
		if pos_x % 2 == 0 and pos_y % 2:
			x_mod = 1
		else:
			x_mod = 0
		if pos_y % 2 == 0 and pos_x % 2:
			y_mod = 1
		else:
			y_mod = 0
		
		if key == curses.KEY_ENTER:
			if str(''.join(str(stdscr.instr(pos_x + x_mod, pos_y +y_mod, 1)).split('\'')).replace('b', '')) == str(player):
				stdscr.addstr(pos_x + x_mod, pos_y + y_mod, 'x')

		# stdscr.addstr(pos_x + x_mod, pos_y + y_mod, '')
		# move might be better?
		stdscr.move(pos_x + x_mod, pos_y + y_mod)
		# curses.setsyx(pos_x + x_mod, pos_y + y_mod)

	curses.endwin()


if __name__ == '__main__':
	start()
